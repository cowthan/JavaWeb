/**
 *  观察者模式：又叫发布订阅模式
 *  
 *  这个模式也比较简单，比较好理解，并且java已经提供了一个良好的框架，
 *  java.util.Observable：基类，实现了add, delete, notifyObservers，维护了一个list
 *  java.util.Observer: 接口，需要实现update方法
 *  
 *  定义：
 *  定义对象间一种一对多的关系，被观察者是1， 观察者是多，每当一个对象改变状态，
 *  则所有依赖于它的对象都会得到通知并被自动更新
 *  
 *  扩展：
 *  1、一个被观察者多个observer，如果update过程比较耗时，那性能就是一个
 *  不得不考虑的问题，此时有两种方法：
 *  （1）异步，不管在哪儿开线程都可以
 *  （2）缓存：就是同步架构：实现较难，要求严格的压力测试，我也不懂
 *  
 *  2、update的参数：一般情况下是这样
 *  参数1：被观察者对象
 *  参数2：一个bean，DTO，data transfer object，纯javabean，
 *  由被观察者构造，观察者消费
 *  
 *  3、观察者链：
 *  一个例子，你打死一只兔子，兔子的崽子饿死了，秃鹫吃了死兔子，变的
 *  强壮，其他秃鹫打不过他，它成老大了
 *  ——这个场景可以用观察者完美实现，但观察者链一旦超过两层，就不好调试了
 *  ——观察者链和责任链的区别：责任链是一个消息不断传送，看谁处理，观察者链
 *  是一个消息传给它，它处理完，再自己作为被观察者，出发下一个观察者，每一层
 *  的消息都是不同的
 *  
 *  其他：
 *  1、EJB3是个轻量级框架，还是比较好用的
 *  2、EJB将bean分为三个类型：
 *  ——Session Bean
 *  ——Entity Bean
 *  ——MessageDriven Bean
 *  
 */
package com.cowthan.pattern1.observer;